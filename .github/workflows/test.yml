name: test

on:
  workflow_dispatch:
  push:
    branches: [ validate-installers-test ]

jobs:
  windows-playground:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        component:
          - os: windows-latest
            artifact: win-sign
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Indicate full history so Nerdbank.GitVersioning works.

    - name: Install Windows
      shell: pwsh
      run: |
        curl -L https://github.com/microsoft/git/releases/download/v2.36.1.vfs.0.0/Git-2.36.1.vfs.0.0-64-bit.exe
        Start-Process -FilePath "Git-2.36.1.vfs.0.0-64-bit.exe" -ArgumentList "/VERYSILENT", "/SILENT"
        echo "${env:ProgramFiles(x86)}\Git Credential Manager" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        "${env:ProgramFiles(x86)}\Git Credential Manager\git-credential-manager-core.exe"
    - name: Validate
      shell: bash
      run: |
        # Even when a standalone GCM version is installed and added to the PATH,
        # GitHub actions runners still only recognize the version bundled with
        # Git for Windows. For this reason, we use the full path to our
        # installation to validate the version.
        if [[ ${{ matrix.component.os }} ]]; then
          # Convert ProgramFiles(x86) environment variable to Unix conventions
          programFiles=$(cygpath -u "$PROGRAMFILES (x86)")
          cmd="$programFiles/Git Credential Manager/git-credential-manager-core.exe"
        else
          cmd=git-credential-manager-core
        fi

        "$cmd" --version | sed 's/+.*//' >actual
        echo 2.0.779 >expect
        cmp expect actual || exit 1
  
    - name: action-tmate
      if: failure()
      uses: mxschmitt/action-tmate@v3
